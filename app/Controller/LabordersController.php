<?php
App::uses('AppController', 'Controller');
/**
 * Laborders Controller
 * Generated by Petit Four the online baking tool for CakePHP: http://patisserie.keensoftware.com
 * @property Laborder $Laborder
 */
class LabordersController extends AppController {

/**
 * index method
 *
 * @return void
 */
	public function index() {
		$this->Laborder->recursive = 2;

		$laborders = $this->paginate();

		//$TotalLabOrder = 0;
		//$TotalPayments = 0;

			foreach($laborders as $index => $labOrder){
				$TotalPayments = 0;
				//$TotalLabOrder+=$labOrder["cost"];
				foreach($labOrder["Orderpayment"] as $orderPayment){
					$TotalPayments+=$orderPayment["amount"];
				}//End payments

				$laborders[$index]["Laborder"]["payments"] = $TotalPayments;

			}//End orders

		$this->set('laborders', $laborders);
	}

/**
 * view method
 *
 * @throws NotFoundException
 * @param int id
 * @return void
 */
	public function view($id = null) {
		if (!$this->Laborder->exists($id)) {
			throw new NotFoundException(__('Invalid laborder'));
		}
		$options = array('conditions' => array('Laborder.' . $this->Laborder->primaryKey => $id));
		$this->set('laborder', $this->Laborder->find('first', $options));
	}

/**
 * add method
 *
 * @return void
 */
	public function add() {
		if ($this->request->is('post')) {
			$this->Laborder->create();
			if ($this->Laborder->save($this->request->data)) {
				$this->Session->setFlash(__('The laborder has been saved'));
				return $this->redirect(array('action' => 'index'));
			} else {
				$this->Session->setFlash(__('The laborder could not be saved. Please, try again.'));
			}
		}
		$laboratories = $this->Laborder->Laboratory->find('list');
		$this->set(compact('laboratories'));

		$pacientes = $this->Laborder->Paciente->find('list', array("fields"=>array("Paciente.id", "Paciente.fullName")));
		$this->set(compact('pacientes'));
	}

/**
 * edit method
 *
 * @throws NotFoundException
 * @param int id
 * @return void
 */
	public function edit($id = null) {
		if (!$this->Laborder->exists($id)) {
			throw new NotFoundException(__('Invalid laborder'));
		}
		if ($this->request->is('post') || $this->request->is('put')) {
			if ($this->Laborder->save($this->request->data)) {
				$this->Session->setFlash(__('The laborder has been saved'));
				return $this->redirect(array('action' => 'index'));
			} else {
				$this->Session->setFlash(__('The laborder could not be saved. Please, try again.'));
			}
		} else {
			$options = array('conditions' => array('Laborder.' . $this->Laborder->primaryKey => $id));
			$this->request->data = $this->Laborder->find('first', $options);
		}
		$laboratories = $this->Laborder->Laboratory->find('list');
		$this->set(compact('laboratories'));
	}

/**
 * delete method
 *
 * @throws NotFoundException
 * @throws MethodNotAllowedException
 * @param int id
 * @return void
 */
	public function delete($id = null) {
		$this->Laborder->id = $id;
		if (!$this->Laborder->exists()) {
			throw new NotFoundException(__('Invalid laborder'));
		}
		$this->request->onlyAllow('post', 'delete');
		if ($this->Laborder->delete()) {
			$this->Session->setFlash(__('The laborder has been deleted.'));
		} else {
			$this->Session->setFlash(__('The laborder could not be deleted. Please, try again.'));
		}
		return $this->redirect(array('action' => 'index'));
	}
}
