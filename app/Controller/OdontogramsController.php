<?php
App::uses('AppController', 'Controller');
/**
 * Doctors Controller
 * Generated by Petit Four the online baking tool for CakePHP: http://patisserie.keensoftware.com
 * @property Doctor $Doctor
 */
class OdontogramsController extends AppController {

/**
 * index method
 *
 * @return void
 */
	public function index($id = null) {
		
		if(!$this->Odontogram->exists($id)){
			throw new NotFoundException(__('Invalid odontogram'));
		}else
		$this->set("odontogramId", $id);

	}

	public function newodonto($id = null) {

		$this->loadModel("Paciente");
		
		if(!$this->Paciente->exists($id)){
			throw new NotFoundException(__('Invalid paciente'));
		}

		$this->Odontogram->create();
		$this->Odontogram->save(array("Odontogram"=>array("paciente_id"=>$id)));

		$odontoId = $this->Odontogram->id;

		return $this->redirect(array("controller"=>"odontograms", "action"=>"index", $odontoId));

	}

	public function update() {

		$parseValue = "";

		if(isset($this->request->data["action"]) && $this->request->data["action"] == "status"){

			if($this->request->data["value"] == "tornillo")
				$parseValue = 1;
			else
				if($this->request->data["value"] == "endodoncia")
					$parseValue = 2;
				else
					if($this->request->data["value"] == "faltante")
						$parseValue = 3;
					else
						if($this->request->data["value"] == "sano")
							$parseValue = 4;
			

		}
		else
			if(isset($this->request->data["action"])){

				if($this->request->data["value"] == "sano")
						$parseValue = 1;
					else
						if($this->request->data["value"] == "caries")
						$parseValue = 2;
						else
							if($this->request->data["value"] == "sellante")
							$parseValue = 3;
							else
								if($this->request->data["value"] == "amalgama")
								$parseValue = 4;
								else
									if($this->request->data["value"] == "composite")
									$parseValue = 5;
									else
										if($this->request->data["value"] == "incrustacion")
										$parseValue = 6;
										else
											if($this->request->data["value"] == "fractura")
											$parseValue = 7;
											

			}

		
		if(isset($this->request->data["odontogramId"])){

			//retrieve odontogram
			$odontogram = $this->Odontogram->find("first", array("conditions"=>array("Odontogram.id"=>$this->request->data["odontogramId"])));

			//search for tooth on odontogram
			$tooth = $this->Odontogram->Tooth->find("first", array("conditions"=>array("Tooth.toothNumber"=>$this->request->data["toothId"], "Tooth.odontogram_id"=>$this->request->data["odontogramId"])));

			if($tooth){

				if($this->request->data["action"] == "status"){

					$this->Odontogram->Tooth->save(array("Tooth"=>array(
						"id"=>$tooth["Tooth"]["id"],
						"odontogram_id"=>$this->request->data["odontogramId"],
															"toothNumber"=>$this->request->data["toothId"],
															"status"=>$parseValue)));
					$response["id"]=1;
					$response["txt"]=__("Odontogram updated");
				}else{

					$this->Odontogram->Tooth->save(array("Tooth"=>array(
						"id"=>$tooth["Tooth"]["id"],
						"odontogram_id"=>$this->request->data["odontogramId"],
															"toothNumber"=>$this->request->data["toothId"],
															$this->request->data["action"]=>$parseValue)));
					$response["id"]=1;
					$response["txt"]=__("Odontogram updated");
				}

			}else{

				$this->Odontogram->Tooth->create();

				if($this->request->data["action"] == "status"){

					$this->Odontogram->Tooth->save(array("Tooth"=>array("odontogram_id"=>$this->request->data["odontogramId"],
															"toothNumber"=>$this->request->data["toothId"],
															"status"=>$parseValue)));
					$response["id"]=1;
					$response["txt"]=__("Odontogram updated");

				}else{

					$this->Odontogram->Tooth->save(array("Tooth"=>array("odontogram_id"=>$this->request->data["odontogramId"],
															"toothNumber"=>$this->request->data["toothId"],
															$this->request->data["action"]=>$parseValue)));
					$response["id"]=1;
					$response["txt"]=__("Odontogram updated");
				}


			}



		}

		
		$this->set("response", json_encode($response));
		$this->render('jsonresponse');
	}

	public function delete() {
		
	}

	public function retrieve() {
		
		if($this->request->data["odontogramId"]){


			$odontogram = $this->Odontogram->find("first", array("conditions"=>array("Odontogram.id"=>$this->request->data["odontogramId"])));


		$response["id"]=1;
		$response["txt"]=__("Odontogram found");
		$response["odontogram"] = $odontogram;
		$this->set("response", json_encode($response));
		$this->render('jsonresponse');


		}

	}


}
