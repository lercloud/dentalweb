<?php
App::uses('AppController', 'Controller');
/**
 * Laboratories Controller
 * Generated by Petit Four the online baking tool for CakePHP: http://patisserie.keensoftware.com
 * @property Laboratory $Laboratory
 */
class LaboratoriesController extends AppController {

/**
 * index method
 *
 * @return void
 */
	public function index() {
		$this->Laboratory->recursive = 2;
		$laboratories = $this->paginate();


		foreach ($laboratories as $index => $laboratory)
		{
			$TotalLabOrder = 0;
			$TotalPayments = 0;
			foreach($laboratory["Laborder"] as $labOrder){
				$TotalLabOrder+=$labOrder["cost"];
				foreach($labOrder["Orderpayment"] as $orderPayment){
					$TotalPayments+=$orderPayment["amount"];
				}//End payments
			}//End orders
			$laboratories[$index]["Laboratory"]["pendingToPay"] = ($TotalLabOrder-$TotalPayments);
		}

		$this->set('laboratories', $laboratories);
	}

/**
 * view method
 *
 * @throws NotFoundException
 * @param int id
 * @return void
 */
	public function view($id = null) {
		if (!$this->Laboratory->exists($id)) {
			throw new NotFoundException(__('Invalid laboratory'));
		}
		$this->Laboratory->recursive = 2;
		$options = array('conditions' => array('Laboratory.' . $this->Laboratory->primaryKey => $id));
		$this->set('laboratory', $this->Laboratory->find('first', $options));
	}

/**
 * add method
 *
 * @return void
 */
	public function add() {
		if ($this->request->is('post')) {
			$this->Laboratory->create();
			if ($this->Laboratory->save($this->request->data)) {
				$this->Session->setFlash(__('The laboratory has been saved'));
				return $this->redirect(array('action' => 'index'));
			} else {
				$this->Session->setFlash(__('The laboratory could not be saved. Please, try again.'));
			}
		}
	}

/**
 * edit method
 *
 * @throws NotFoundException
 * @param int id
 * @return void
 */
	public function edit($id = null) {
		if (!$this->Laboratory->exists($id)) {
			throw new NotFoundException(__('Invalid laboratory'));
		}
		if ($this->request->is('post') || $this->request->is('put')) {
			if ($this->Laboratory->save($this->request->data)) {
				$this->Session->setFlash(__('The laboratory has been saved'));
				return $this->redirect(array('action' => 'index'));
			} else {
				$this->Session->setFlash(__('The laboratory could not be saved. Please, try again.'));
			}
		} else {
			$options = array('conditions' => array('Laboratory.' . $this->Laboratory->primaryKey => $id));
			$this->request->data = $this->Laboratory->find('first', $options);
		}
	}

/**
 * delete method
 *
 * @throws NotFoundException
 * @throws MethodNotAllowedException
 * @param int id
 * @return void
 */
	public function delete($id = null) {
		$this->Laboratory->id = $id;
		if (!$this->Laboratory->exists()) {
			throw new NotFoundException(__('Invalid laboratory'));
		}
		$this->request->onlyAllow('post', 'delete');
		if ($this->Laboratory->delete()) {
			$this->Session->setFlash(__('The laboratory has been deleted.'));
		} else {
			$this->Session->setFlash(__('The laboratory could not be deleted. Please, try again.'));
		}
		return $this->redirect(array('action' => 'index'));
	}
}
